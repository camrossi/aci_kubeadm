---

- name: Reset cluster
  command: kubeadm reset -f
  
- name: Kubeadm INIT
  command: kubeadm init --token {{ kubeadm_token }} --pod-network-cidr={{ net_config.pod_subnet }}  --service-cidr={{ net_config.cluster_svc_subnet  }} --ignore-preflight-errors='all'

- name: restart kublet to pick up the new cluster-dns also issue daemon-reload to pick up config changes
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet

- name: Create Kubernetes config directory
  file: path="~/.kube/" state=directory

- name: Change permissions of .kube/config
  file: path=/etc/kubernetes/admin.conf mode=0775

- name: Copy admin.conf to root home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "~/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
    remote_src: True 

- name: Create .kube directory for the cisco user
  file:
    path: "/home/cisco/.kube/"
    state: directory
    mode: 0755

- name: Copy admin.conf to cisco user home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/cisco/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
    remote_src: True

- name: Copy guestbook configuration to cisco user home directory
  copy:
    src: roles/master/files/guestbook.yaml
    dest: "/home/cisco/guestbook.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
    remote_src: no


- name: Enable and restart kubelet 
  systemd:
    name: kubelet
    daemon_reload: yes
    state: restarted
    enabled: yes
  
- name: Copy acc-privision
  copy:
    src: roles/aci-host/files/{{ acc_provision_installer }}
    dest: "~/{{ acc_provision_installer }}"

- name: Install ACC Provision on the master node
  apt:
    deb: ~/{{ acc_provision_installer }}

- name: Copy cni-confi
  copy:
    src:  aci-cni-config.yaml
    dest: "~/aci-cni-config.yaml"

- name: Deploy CNI
  command: kubectl apply -f ~/aci-cni-config.yaml
